{"mappings":"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","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/main.js","./node_modules/vue/index.js","./node_modules/vue/dist/vue.cjs.js","./node_modules/@vue/compiler-dom/index.js","./node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js","./node_modules/@vue/compiler-core/index.js","./node_modules/@vue/compiler-core/dist/compiler-core.cjs.js","./node_modules/@vue/shared/index.js","./node_modules/@vue/shared/dist/shared.cjs.js","./node_modules/@vue/compiler-core/node_modules/source-map/source-map.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/source-map-generator.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/base64-vlq.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/base64.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/util.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/array-set.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/mapping-list.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/source-map-consumer.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/binary-search.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/quick-sort.js","./node_modules/@vue/compiler-core/node_modules/source-map/lib/source-node.js","./node_modules/@babel/parser/src/tokenizer/types.js","./node_modules/@babel/parser/src/util/whitespace.js","./node_modules/@babel/parser/src/util/location.js","./node_modules/@babel/parser/src/parser/base.js","./node_modules/@babel/parser/src/parser/comments.js","./node_modules/@babel/parser/src/parser/error-codes.js","./node_modules/@babel/parser/src/parser/error-message.js","./node_modules/@babel/parser/src/parser/error.js","./node_modules/@babel/parser/src/plugins/estree.js","./node_modules/@babel/parser/src/tokenizer/context.js","./node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","./node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","./node_modules/@babel/parser/src/util/identifier.js","./node_modules/@babel/parser/src/util/scopeflags.js","./node_modules/@babel/parser/src/util/scope.js","./node_modules/@babel/parser/src/plugins/flow/scope.js","./node_modules/@babel/parser/src/plugins/flow/index.js","./node_modules/@babel/parser/src/plugins/jsx/xhtml.js","./node_modules/@babel/parser/src/tokenizer/state.js","./node_modules/@babel/parser/src/plugins/jsx/index.js","./node_modules/@babel/parser/src/plugins/typescript/scope.js","./node_modules/@babel/parser/src/util/production-parameter.js","./node_modules/@babel/parser/src/plugins/typescript/index.js","./node_modules/@babel/parser/src/plugins/placeholders.js","./node_modules/@babel/parser/src/plugins/v8intrinsic.js","./node_modules/@babel/parser/src/plugin-utils.js","./node_modules/@babel/parser/src/options.js","./node_modules/@babel/parser/src/tokenizer/index.js","./node_modules/@babel/parser/src/util/class-scope.js","./node_modules/@babel/parser/src/util/expression-scope.js","./node_modules/@babel/parser/src/parser/util.js","./node_modules/@babel/parser/src/parser/node.js","./node_modules/@babel/parser/src/parser/lval.js","./node_modules/@babel/parser/src/parser/expression.js","./node_modules/@babel/parser/src/parser/statement.js","./node_modules/@babel/parser/src/parser/index.js","./node_modules/@babel/parser/src/index.js","./node_modules/estree-walker/dist/umd/estree-walker.js","./node_modules/@vue/runtime-dom/index.js","./node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js","./node_modules/@vue/runtime-core/index.js","./node_modules/@vue/runtime-core/dist/runtime-core.cjs.js","./node_modules/@vue/reactivity/index.js","./node_modules/@vue/reactivity/dist/reactivity.cjs.js","./src/App.vue","./node_modules/vue-router/dist/vue-router.cjs.js","./node_modules/@vue/devtools-api/lib/esm/index.js","./node_modules/@vue/devtools-api/lib/esm/env.js","./node_modules/@parcel/transformer-js/lib/esmodule-helpers.js","./node_modules/@vue/devtools-api/lib/esm/const.js","./node_modules/@vue/devtools-api/lib/esm/api/index.js","./node_modules/@vue/devtools-api/lib/esm/api/api.js","./node_modules/@vue/devtools-api/lib/esm/api/app.js","./node_modules/@vue/devtools-api/lib/esm/api/component.js","./node_modules/@vue/devtools-api/lib/esm/api/context.js","./node_modules/@vue/devtools-api/lib/esm/api/hooks.js","./node_modules/@vue/devtools-api/lib/esm/api/util.js","./src/router.js","./src/pages/HomePage.vue","./src/pages/LoginPage.vue","./src/pages/RegisterPage.vue"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\nimport type { TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(context: Array<TokContext>) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  privateName: new TokenType(\"#name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\", { beforeExpr }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number,\n  end: number,\n  comments: Array<Comment>,\n  leadingNode: Node | null,\n  trailingNode: Node | null,\n  containingNode: Node | null,\n};\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Node, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(node: Node, comments: Array<Comment> | void) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Node} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Node,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaning commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterepret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n}\n","// @flow\n\nexport const ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ErrorCode = $Values<typeof ErrorCodes>;\n","// @flow\n\nimport { makeErrorTemplates, ErrorCodes } from \"./error\";\n\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = makeErrorTemplates(\n  {\n    AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n    ArgumentsInClass:\n      \"'arguments' is only allowed in functions and class methods.\",\n    AsyncFunctionInSingleStatementContext:\n      \"Async functions can only be declared at the top level or inside a block.\",\n    AwaitBindingIdentifier:\n      \"Can not use 'await' as identifier inside an async function.\",\n    AwaitBindingIdentifierInStaticBlock:\n      \"Can not use 'await' as identifier inside a static block.\",\n    AwaitExpressionFormalParameter:\n      \"'await' is not allowed in async function parameters.\",\n    AwaitNotInAsyncContext:\n      \"'await' is only allowed within async functions and at the top levels of modules.\",\n    AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n    BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n    BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n    BadSetterRestParameter:\n      \"A 'set' accesor function argument must not be a rest parameter.\",\n    ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n    ConstructorClassPrivateField:\n      \"Classes may not have a private field named '#constructor'.\",\n    ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n    ConstructorIsAsync: \"Constructor can't be an async function.\",\n    ConstructorIsGenerator: \"Constructor can't be a generator.\",\n    DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n    DecoratorBeforeExport:\n      \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n    DecoratorConstructor:\n      \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n    DecoratorExportClass:\n      \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n    DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n    DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n    DeletePrivateField: \"Deleting a private field is not allowed.\",\n    DestructureNamedImport:\n      \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n    DuplicateConstructor: \"Duplicate constructor in the same class.\",\n    DuplicateDefaultExport: \"Only one default export allowed per module.\",\n    DuplicateExport:\n      \"`%0` has already been exported. Exported identifiers must be unique.\",\n    DuplicateProto: \"Redefinition of __proto__ property.\",\n    DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n    ElementAfterRest: \"Rest element must be last element.\",\n    EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n    ExportBindingIsString:\n      \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n    ExportDefaultFromAsIdentifier:\n      \"'from' is not allowed as an identifier after 'export default'.\",\n    ForInOfLoopInitializer:\n      \"'%0' loop variable declaration may not have an initializer.\",\n    ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n    ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n    GeneratorInSingleStatementContext:\n      \"Generators can only be declared at the top level or inside a block.\",\n    IllegalBreakContinue: \"Unsyntactic %0.\",\n    IllegalLanguageModeDirective:\n      \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n    IllegalReturn: \"'return' outside of function.\",\n    ImportBindingIsString:\n      'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n    ImportCallArgumentTrailingComma:\n      \"Trailing comma is disallowed inside import(...) arguments.\",\n    ImportCallArity: \"`import()` requires exactly %0.\",\n    ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n    ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n    InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n    InvalidCodePoint: \"Code point out of bounds.\",\n    InvalidDecimal: \"Invalid decimal.\",\n    InvalidDigit: \"Expected number in radix %0.\",\n    InvalidEscapeSequence: \"Bad character escape sequence.\",\n    InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n    InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n    InvalidIdentifier: \"Invalid identifier %0.\",\n    InvalidLhs: \"Invalid left-hand side in %0.\",\n    InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n    InvalidNumber: \"Invalid number.\",\n    InvalidOrMissingExponent:\n      \"Floating-point numbers require a valid exponent after the 'e'.\",\n    InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n    InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n    InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n    InvalidPropertyBindingPattern: \"Binding member expression.\",\n    InvalidRecordProperty:\n      \"Only properties and spread elements are allowed in record definitions.\",\n    InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n    LabelRedeclaration: \"Label '%0' is already declared.\",\n    LetInLexicalBinding:\n      \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n    LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n    MalformedRegExpFlags: \"Invalid regular expression flag.\",\n    MissingClassName: \"A class name is required.\",\n    MissingEqInAssignment:\n      \"Only '=' operator can be used for specifying default value.\",\n    MissingSemicolon: \"Missing semicolon.\",\n    MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n    MixingCoalesceWithLogical:\n      \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n    ModuleAttributeDifferentFromType:\n      \"The only accepted module attribute is `type`.\",\n    ModuleAttributeInvalidValue:\n      \"Only string literals are allowed as module attribute values.\",\n    ModuleAttributesWithDuplicateKeys:\n      'Duplicate key \"%0\" is not allowed in module attributes.',\n    ModuleExportNameHasLoneSurrogate:\n      \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n    ModuleExportUndefined: \"Export '%0' is not defined.\",\n    MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n    NewlineAfterThrow: \"Illegal newline after throw.\",\n    NoCatchOrFinally: \"Missing catch or finally clause.\",\n    NumberIdentifier: \"Identifier directly after number.\",\n    NumericSeparatorInEscapeSequence:\n      \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n    ObsoleteAwaitStar:\n      \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n    OptionalChainingNoNew:\n      \"Constructors in/after an Optional Chain are not allowed.\",\n    OptionalChainingNoTemplate:\n      \"Tagged Template Literals are not allowed in optionalChain.\",\n    OverrideOnConstructor:\n      \"'override' modifier cannot appear on a constructor declaration.\",\n    ParamDupe: \"Argument name clash.\",\n    PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n    PatternHasMethod: \"Object pattern can't contain methods.\",\n    PipelineBodyNoArrow:\n      'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n    PipelineBodySequenceExpression:\n      \"Pipeline body may not be a comma-separated sequence expression.\",\n    PipelineHeadSequenceExpression:\n      \"Pipeline head should not be a comma-separated sequence expression.\",\n    PipelineTopicUnused:\n      \"Pipeline is in topic style but does not use topic reference.\",\n    PrimaryTopicNotAllowed:\n      \"Topic reference was used in a lexical context without topic binding.\",\n    PrimaryTopicRequiresSmartPipeline:\n      \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n    PrivateInExpectedIn:\n      \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n    PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n    RecordExpressionBarIncorrectEndSyntaxType:\n      \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionBarIncorrectStartSyntaxType:\n      \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionHashIncorrectStartSyntaxType:\n      \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n    RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n    SloppyFunction:\n      \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n    StaticPrototype: \"Classes may not have static property named prototype.\",\n    StrictDelete: \"Deleting local variable in strict mode.\",\n    StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n    StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n    StrictFunction:\n      \"In strict mode code, functions can only be declared at top level or inside a block.\",\n    StrictNumericEscape:\n      \"The only valid numeric escape in strict mode is '\\\\0'.\",\n    StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n    StrictWith: \"'with' in strict mode.\",\n    SuperNotAllowed:\n      \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n    SuperPrivateField: \"Private fields can't be accessed on super.\",\n    TrailingDecorator: \"Decorators must be attached to a class element.\",\n    TupleExpressionBarIncorrectEndSyntaxType:\n      \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionBarIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionHashIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n    UnexpectedAwaitAfterPipelineBody:\n      'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n    UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n    UnexpectedImportExport:\n      \"'import' and 'export' may only appear at the top level.\",\n    UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n    UnexpectedLeadingDecorator:\n      \"Leading decorators must be attached to a class declaration.\",\n    UnexpectedLexicalDeclaration:\n      \"Lexical declaration cannot appear in a single-statement context.\",\n    UnexpectedNewTarget:\n      \"`new.target` can only be used in functions or class properties.\",\n    UnexpectedNumericSeparator:\n      \"A numeric separator is only allowed between two digits.\",\n    UnexpectedPrivateField:\n      \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n    UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n    UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n    UnexpectedToken: \"Unexpected token '%0'.\",\n    UnexpectedTokenUnaryExponentiation:\n      \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n    UnsupportedBind: \"Binding should be performed on object property.\",\n    UnsupportedDecoratorExport:\n      \"A decorated export must export a class declaration.\",\n    UnsupportedDefaultExport:\n      \"Only expressions, functions or classes are allowed as the `default` export.\",\n    UnsupportedImport:\n      \"`import` can only be used in `import()` or `import.meta`.\",\n    UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n    UnsupportedParameterDecorator:\n      \"Decorators cannot be used to decorate parameters.\",\n    UnsupportedPropertyDecorator:\n      \"Decorators cannot be used to decorate object literal properties.\",\n    UnsupportedSuper:\n      \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n    UnterminatedComment: \"Unterminated comment.\",\n    UnterminatedRegExp: \"Unterminated regular expression.\",\n    UnterminatedString: \"Unterminated string constant.\",\n    UnterminatedTemplate: \"Unterminated template.\",\n    VarRedeclaration: \"Identifier '%0' has already been declared.\",\n    YieldBindingIdentifier:\n      \"Can not use 'yield' as identifier inside a generator.\",\n    YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n    ZeroDigitNumericSeparator:\n      \"Numeric separator can not be used after leading 0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport const SourceTypeModuleErrorMessages = makeErrorTemplates(\n  {\n    ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n    ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  },\n  /* code */ ErrorCodes.SourceTypeModuleError,\n);\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\nimport { type ErrorCode, ErrorCodes } from \"./error-codes\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n  reasonCode?: String,\n};\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport type ErrorTemplate = {\n  code: ErrorCode,\n  template: string,\n  reasonCode: string,\n};\nexport type ErrorTemplates = {\n  [key: string]: ErrorTemplate,\n};\n\nexport function makeErrorTemplates(\n  messages: {\n    [key: string]: string,\n  },\n  code: ErrorCode,\n): ErrorTemplates {\n  const templates: ErrorTemplates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode],\n    });\n  });\n  return Object.freeze(templates);\n}\n\nexport { ErrorCodes };\nexport {\n  ErrorMessages as Errors,\n  SourceTypeModuleErrorMessages as SourceTypeModuleErrors,\n} from \"./error-message\";\n\nexport type raiseFunction = (number, ErrorTemplate, ...any) => void;\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(\n    pos: number,\n    { code, reasonCode, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    return this.raiseWithData(pos, { code, reasonCode }, template, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    { code, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      template.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ code, loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseRegExpLiteral({ pattern, flags }): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T: N.Node>(value: any) {\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const value = stmt.expression.value;\n      const directive = super.stmtToDirective(stmt);\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseMaybePrivateName(...args: [boolean]): any {\n      const node = super.parseMaybePrivateName(...args);\n      if (\n        node.type === \"PrivateName\" &&\n        this.getPluginOption(\"estree\", \"classFeatures\")\n      ) {\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n      return node;\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n      const node = super.parseLiteral<T>(value, type);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The token context is used to track whether the apostrophe \"`\"\n// starts or ends a string template\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.braceR.updateContext = context => {\n  context.pop();\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\n// ideally only dollarBraceL \"${\" needs a non-template context\n// in order to indicate that the last \"`\" in `${`\" starts a new string template\n// inside a template element within outer string template.\n// but when we popped such context in `}`, we lost track of whether this\n// `}` matches a `${` or other tokens matching `}`, so we have to push\n// such context in every token that `}` will match.\ntt.braceL.updateContext =\n  tt.braceHashL.updateContext =\n  tt.dollarBraceL.updateContext =\n    context => {\n      context.push(types.brace);\n    };\n\ntt.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport { types as tt, type TokenType } from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = makeErrorTemplates(\n  {\n    AmbiguousConditionalArrow:\n      \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n    AmbiguousDeclareModuleKind:\n      \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n    AssignReservedType: \"Cannot overwrite reserved type %0.\",\n    DeclareClassElement:\n      \"The `declare` modifier can only appear on class fields.\",\n    DeclareClassFieldInitializer:\n      \"Initializers are not allowed in fields with the `declare` modifier.\",\n    DuplicateDeclareModuleExports:\n      \"Duplicate `declare module.exports` statement.\",\n    EnumBooleanMemberNotInitialized:\n      \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n    EnumDuplicateMemberName:\n      \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n    EnumInconsistentMemberValues:\n      \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n    EnumInvalidExplicitType:\n      \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidExplicitTypeUnknownSupplied:\n      \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidMemberInitializerPrimaryType:\n      \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n    EnumInvalidMemberInitializerSymbolType:\n      \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n    EnumInvalidMemberInitializerUnknownType:\n      \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n    EnumInvalidMemberName:\n      \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n    EnumNumberMemberNotInitialized:\n      \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n    EnumStringMemberInconsistentlyInitailized:\n      \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n    GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n    ImportTypeShorthandOnlyInPureImport:\n      \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n    InexactInsideExact:\n      \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n    InexactInsideNonObject:\n      \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n    InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n    InvalidNonTypeImportInDeclareModule:\n      \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n    MissingTypeParamDefault:\n      \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n    NestedDeclareModule:\n      \"`declare module` cannot be used inside another `declare module`.\",\n    NestedFlowComment:\n      \"Cannot have a flow comment inside another flow comment.\",\n    OptionalBindingPattern:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n    SpreadVariance: \"Spread properties cannot have variance.\",\n    ThisParamAnnotationRequired:\n      \"A type annotation is required for the `this` parameter.\",\n    ThisParamBannedInConstructor:\n      \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n    ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n    ThisParamMustBeFirst:\n      \"The `this` parameter must be the first function parameter.\",\n    ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n    TypeBeforeInitializer:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeCastInPattern:\n      \"The type cast expression is expected to be wrapped with parenthesis.\",\n    UnexpectedExplicitInexactInObject:\n      \"Explicit inexact syntax must appear at the end of an inexact object.\",\n    UnexpectedReservedType: \"Unexpected reserved type %0.\",\n    UnexpectedReservedUnderscore:\n      \"`_` is only allowed as a type argument to call or new.\",\n    UnexpectedSpaceBetweenModuloChecks:\n      \"Spaces between `%` and `checks` are not allowed here.\",\n    UnexpectedSpreadType:\n      \"Spread operator cannot appear in class or interface definitions.\",\n    UnexpectedSubtractionOperand:\n      'Unexpected token, expected \"number\" or \"bigint\".',\n    UnexpectedTokenAfterTypeParameter:\n      \"Expected an arrow function after this type parameter declaration.\",\n    UnexpectedTypeParameterBeforeAsyncArrowFunction:\n      \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n    UnsupportedDeclareExportKind:\n      \"`declare export %0` is not supported. Use `%1` instead.\",\n    UnsupportedStatementInDeclareModule:\n      \"Only declares and type imports are allowed inside declare module.\",\n    UnterminatedFlowComment: \"Unterminated flow-comment.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: { type: TokenType, value: any }): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloPos = this.state.start;\n      this.next(); // eat `%`\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloPos + 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode<N.BooleanLiteralTypeAnnotation>(\n            node,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (this.state.maybeInArrowParameters) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          if (result.error) {\n            /*:: invariant(refExpressionErrors != null) */\n            super.setOptionalParametersError(refExpressionErrors, result.error);\n          }\n\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(this.state.pos, Errors.InvalidIdentifier, fullWord);\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentIsString = this.match(tt.string);\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdentIsString) {\n          /*:: invariant(firstIdent instanceof N.StringLiteral) */\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        /*:: invariant(firstIdent instanceof N.Node) */\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          specifier.start,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const curContext = context[context.length - 1];\n        if (curContext === tc.j_oTag) {\n          context.length -= 2;\n        } else if (curContext === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\nimport type { ParsingError, ErrorTemplate } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false\n        ? false\n        : options.strictMode === true\n        ? true\n        : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, ErrorTemplate> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number,\n  value: any,\n  type: TokenType,\n  start: number,\n  end: number,\n  /* Used only in readToken_mult_modulo */\n  inType: boolean,\n};\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\nimport type { LookaheadState } from \"../../tokenizer/state\";\nimport State from \"../../tokenizer/state\";\n\ntype JSXLookaheadState = LookaheadState & { inPropertyName: boolean };\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = makeErrorTemplates(\n  {\n    AttributeIsEmpty:\n      \"JSX attributes must only be assigned a non-empty expression.\",\n    MissingClosingTagElement:\n      \"Expected corresponding JSX closing tag for <%0>.\",\n    MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n    UnexpectedSequenceExpression:\n      \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n    UnsupportedJsxValue:\n      \"JSX value should be either an expression or a quoted JSX text.\",\n    UnterminatedJsxContent: \"Unterminated JSX contents.\",\n    UnwrappedAdjacentJSXElements:\n      \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\");\ntc.j_cTag = new TokContext(\"</tag\");\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = context => {\n  context.push(\n    tc.j_expr, // treat as beginning of JSX expression\n    tc.j_oTag, // start opening tag context\n  );\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(this.state.pos, {\n                code: ErrorCodes.SyntaxError,\n                reasonCode: \"UnexpectedToken\",\n                template: `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    createLookaheadState(state: State): JSXLookaheadState {\n      const lookaheadState = ((super.createLookaheadState(\n        state,\n      ): any): JSXLookaheadState);\n      lookaheadState.inPropertyName = state.inPropertyName;\n      return lookaheadState;\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      super.updateContext(prevType);\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.exprAllowed = false;\n      } else if (type === tt.jsxTagEnd) {\n        const out = context.pop();\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.exprAllowed = context[context.length - 1] === tc.j_expr;\n        } else {\n          this.state.exprAllowed = true;\n        }\n      } else if (\n        type.keyword &&\n        (prevType === tt.dot || prevType === tt.questionDot)\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        this.state.exprAllowed = type.beforeExpr;\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport {\n  Errors,\n  makeErrorTemplates,\n  type ErrorTemplate,\n  ErrorCodes,\n} from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = makeErrorTemplates(\n  {\n    AbstractMethodHasImplementation:\n      \"Method '%0' cannot have an implementation because it is marked abstract.\",\n    AccesorCannotDeclareThisParameter:\n      \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n    AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n    ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n    ClassMethodHasReadonly:\n      \"Class methods cannot have the 'readonly' modifier.\",\n    ConstructorHasTypeParameters:\n      \"Type parameters cannot appear on a constructor declaration.\",\n    DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n    DeclareClassFieldHasInitializer:\n      \"Initializers are not allowed in ambient contexts.\",\n    DeclareFunctionHasImplementation:\n      \"An implementation cannot be declared in ambient contexts.\",\n    DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n    DuplicateModifier: \"Duplicate modifier: '%0'.\",\n    EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n    EmptyTypeArguments: \"Type argument list cannot be empty.\",\n    EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n    ExpectedAmbientAfterExportDeclare:\n      \"'export declare' must be followed by an ambient declaration.\",\n    ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n    IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n    IndexSignatureHasAbstract:\n      \"Index signatures cannot have the 'abstract' modifier.\",\n    IndexSignatureHasAccessibility:\n      \"Index signatures cannot have an accessibility modifier ('%0').\",\n    IndexSignatureHasDeclare:\n      \"Index signatures cannot have the 'declare' modifier.\",\n    IndexSignatureHasOverride:\n      \"'override' modifier cannot appear on an index signature.\",\n    IndexSignatureHasStatic:\n      \"Index signatures cannot have the 'static' modifier.\",\n    InvalidModifierOnTypeMember:\n      \"'%0' modifier cannot appear on a type member.\",\n    InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n    InvalidTupleMemberLabel:\n      \"Tuple members must be labeled with a simple identifier.\",\n    MixedLabeledAndUnlabeledElements:\n      \"Tuple members must all have names or all not have names.\",\n    NonAbstractClassHasAbstractMethod:\n      \"Abstract methods can only appear within an abstract class.\",\n    NonClassMethodPropertyHasAbstractModifer:\n      \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n    OptionalTypeBeforeRequired:\n      \"A required element cannot follow an optional element.\",\n    OverrideNotInSubClass:\n      \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n    PatternIsOptional:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    PrivateElementHasAbstract:\n      \"Private elements cannot have the 'abstract' modifier.\",\n    PrivateElementHasAccessibility:\n      \"Private elements cannot have an accessibility modifier ('%0').\",\n    ReadonlyForMethodSignature:\n      \"'readonly' modifier can only appear on a property declaration or index signature.\",\n    SetAccesorCannotHaveOptionalParameter:\n      \"A 'set' accessor cannot have an optional parameter.\",\n    SetAccesorCannotHaveRestParameter:\n      \"A 'set' accessor cannot have rest parameter.\",\n    SetAccesorCannotHaveReturnType:\n      \"A 'set' accessor cannot have a return type annotation.\",\n    StaticBlockCannotHaveModifier:\n      \"Static class blocks cannot have any modifier.\",\n    TypeAnnotationAfterAssign:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeImportCannotSpecifyDefaultAndNamed:\n      \"A type-only import can specify a default import or named bindings, but not both.\",\n    UnexpectedParameterModifier:\n      \"A parameter property is only allowed in a constructor implementation.\",\n    UnexpectedReadonly:\n      \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n    UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n    UnexpectedTypeCastInParameter:\n      \"Unexpected type cast in parameter position.\",\n    UnsupportedImportTypeArgument:\n      \"Argument in a type import must be a string literal.\",\n    UnsupportedParameterPropertyKind:\n      \"A parameter property may not be declared using a binding pattern.\",\n    UnsupportedSignatureParameterKind:\n      \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: ErrorTemplate,\n    ): void {\n      const enforceOrder = (pos, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n        }\n      };\n      const incompatible = (pos, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n        }\n      };\n\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            enforceOrder(startPos, modifier, modifier, \"override\");\n            enforceOrder(startPos, modifier, modifier, \"static\");\n            enforceOrder(startPos, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          } else {\n            enforceOrder(startPos, modifier, \"static\", \"readonly\");\n            enforceOrder(startPos, modifier, \"static\", \"override\");\n            enforceOrder(startPos, modifier, \"override\", \"readonly\");\n            enforceOrder(startPos, modifier, \"abstract\", \"override\");\n\n            incompatible(startPos, modifier, \"declare\", \"override\");\n            incompatible(startPos, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.isRelational(\"<\")) {\n          this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        if (method.kind === \"get\") {\n          if (method.parameters.length > 0) {\n            this.raise(this.state.pos, Errors.BadGetterArity);\n            if (this.isThisParam(method.parameters[0])) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method.parameters.length !== 1) {\n            this.raise(this.state.pos, Errors.BadSetterArity);\n          } else {\n            const firstParameter = method.parameters[0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveOptionalParameter,\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveRestParameter,\n              );\n            }\n          }\n          if (method.typeAnnotation) {\n            this.raise(\n              method.typeAnnotation.start,\n              TSErrors.SetAccesorCannotHaveReturnType,\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.tsParseTypeParameterName();\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            (node: N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node: N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return this.isContextual(\"abstract\") && this.lookahead().type === tt._new;\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || this.match(tt.name))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.match(tt.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified = {};\n        this.tsParseModifiers(modified, [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"override\",\n          \"readonly\",\n        ]);\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = false;\n              }\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\") &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          TSErrors.TypeImportCannotSpecifyDefaultAndNamed,\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(\"type\") &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const invalidModifersForStaticBlocks = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n      ];\n      this.tsParseModifiers(\n        member,\n        invalidModifersForStaticBlocks.concat([\"static\"]),\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        const isStatic = !!member.static;\n        if (isStatic && this.eat(tt.braceL)) {\n          if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n            this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n        if ((member: any).override) {\n          this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(member.start, TSErrors.OverrideNotInSubClass);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      if (\n        isDeclare &&\n        (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n\n      // $FlowIgnore\n      if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n        this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (\n            /*bindingType*/ !args[0] &&\n            contextDescription !== \"parenthesized expression\" &&\n            !expr.extra?.parenthesized\n          ) {\n            this.raise(expr.start, Errors.InvalidLhs, contextDescription);\n            break;\n          }\n          this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n          return;\n        case \"TSNonNullExpression\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close) {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n      } else {\n        super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(\"interface\")) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\"\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { makeErrorTemplates, ErrorCodes } from \"../parser/error\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nconst PlaceHolderErrors = makeErrorTemplates(\n  {\n    ClassNameIsRequired: \"A class name is required.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVerionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors, type ErrorTemplate } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState } from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: ErrorTemplate | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simpified tokenizer state structure\n    // $FlowIgnore\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    if (curContext === ct.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment(): N.CommentBlock | void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const value = this.input.slice(start + 2, end);\n    const comment = {\n      type: \"CommentBlock\",\n      value: value,\n      start: start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: ErrorTemplate) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word) || tt.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  // the prevType is required by the jsx plugin\n  // eslint-disable-next-line no-unused-vars\n  updateContext(prevType: TokenType): void {\n    this.state.type.updateContext?.(this.state.context);\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { ErrorTemplate, raiseFunction } from \"../parser/error\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ ErrorTemplate> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, template: ErrorTemplate) {\n    this.errors.set(pos, template);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (template: ErrorTemplate, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, template);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(\n    pos: number,\n    template: ErrorTemplate,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((template, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, template);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors, type ErrorTemplate, ErrorCodes } from \"./error\";\nimport type { ParsingError } from \"./error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, template?: ErrorTemplate): void {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.end, this.nextTokenStart()),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message,\n      });\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: ErrorTemplate | TokenType = {\n      code: ErrorCodes.SyntaxError,\n      reasonCode: \"UnexpectedToken\",\n      template: \"Unexpected token\",\n    },\n  ): empty {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`,\n      };\n    }\n\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParsingError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: ParsingError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto, optionalParameters } =\n      refExpressionErrors;\n    if (!andThrow) {\n      return (\n        shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0\n      );\n    }\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssign**: track initializer `=` position\n * - **doubleProto**: track the duplicate `__proto__` key position\n * - **optionalParameters**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n  optionalParameters = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport type { ParsingError } from \"./error\";\nimport { setInnerComments } from \"./comments\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParsingError,\n  ) {\n    refExpressionErrors.optionalParameters =\n      resultError?.pos ?? this.state.start;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line no-unused-vars\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? this.state.type.startsExpr\n        : this.state.type.startsExpr && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(\n          startPos,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName =\n      !computed && this.match(tt.privateName) && this.state.value;\n    const property = computed\n      ? this.parseExpression()\n      : privateName\n      ? this.parsePrivateName()\n      : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    setInnerComments(node, call.innerComments);\n    // mark trailing comments of `async` to be inner comments\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        if (\n          this.isContextual(\"module\") &&\n          this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n          !this.hasFollowingLineBreak()\n        ) {\n          return this.parseModuleExpression();\n        }\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            this.resetPreviousNodeTrailingComments(id);\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            // If the next token begins with \"=\", commit to parsing an async\n            // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n            // expensive full-token lookahead on this common path.)\n            if (this.lookaheadCharCode() === charCodes.equalsTo) {\n              // although `id` is not used in async arrow unary function,\n              // we don't need to reset `async`'s trailing comments because\n              // it will be attached to the upcoming async arrow binding identifier\n              return this.parseAsyncArrowUnaryFunction(\n                this.startNodeAtNode(id),\n              );\n            } else {\n              // Otherwise, treat \"async\" as an identifier and let calling code\n              // deal with the current tt.name token.\n              return id;\n            }\n          } else if (this.match(tt._do)) {\n            this.resetPreviousNodeTrailingComments(id);\n            return this.parseDo(this.startNodeAtNode(id), true);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.privateName: {\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const start = this.state.start;\n        const value = this.state.value;\n        node = this.parsePrivateName();\n        if (this.match(tt._in)) {\n          this.expectPlugin(\"privateIn\");\n          this.classScope.usePrivateName(value, node.start);\n        } else if (this.hasPlugin(\"privateIn\")) {\n          this.raise(this.state.start, Errors.PrivateInExpectedIn, value);\n        } else {\n          throw this.unexpected(start);\n        }\n        return node;\n      }\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(node: N.Node): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(node: N.Node, isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, Errors.UnexpectedPrivateField);\n      }\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrors.ImportMetaOutsideModule);\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T: N.Node>(\n    value: any,\n    type: $ElementType<T, \"type\">,\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: { value: any, pattern: string, flags: string }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode<N.BooleanLiteral>(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode<N.NullLiteral>(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParameters === -1\n            ? null\n            : refExpressionErrors.optionalParameters,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, Errors.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      const type = this.state.type;\n      (prop: $FlowFixMe).key =\n        type === tt.num ||\n        type === tt.string ||\n        type === tt.bigint ||\n        type === tt.decimal\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, Errors.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, Errors.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    return (\n      this.hasPrecedingLineBreak() ||\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      this.match(tt.plusMin) ||\n      this.match(tt.parenL) ||\n      this.match(tt.bracketL) ||\n      this.match(tt.backQuote) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      this.match(tt.regexp) ||\n      this.match(tt.slash) ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position } from \"../util/location\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tt.privateName to tt.hash + tt.name for backward Babel 7 compat.\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens) {\n  if (!process.env.BABEL_8_BREAKING) {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      if (token.type === tt.privateName) {\n        const { loc, start, value, end } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(\n          i,\n          1,\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.hash,\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc,\n          }),\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.name,\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end,\n          }),\n        );\n      }\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = (stmt: any);\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n      if (matched !== null) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(next + matched[0].length);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrors.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithUnescapedName =\n      this.match(tt.name) && !this.state.containsEsc;\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(init.start, Errors.ForOfLet);\n      } else if (\n        // `for await (async of []);` is allowed.\n        awaitAt === -1 &&\n        startsWithUnescapedName &&\n        init.type === \"Identifier\" &&\n        init.name === \"async\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(init.start, Errors.ForOfAsync);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual = this.match(tt.name) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, Errors.OverrideOnConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value, start } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(start, Errors.StaticPrototype);\n    }\n\n    if (type === tt.privateName && value === \"constructor\") {\n      this.raise(start, Errors.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.exportedIdentifiers.add(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          this.state.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    const importedIsString = this.match(tt.string);\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n",null,null,null,null,null,null,null,"<template>\n  <router-view></router-view>\n</template>\n\n<script>\nimport { RouterView } from 'vue-router';\nexport default {\n  components: {\n    'router-view': RouterView,\n  },\n};\n</script>\n",null,null,null,null,null,null,null,null,null,null,null,null,null,"<template>\n  <div>\n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"container\">\n          <router-link to=\"/\" class=\"navbar-brand\">Home</router-link>\n          <div class=\"d-flex\">\n            <span class=\"navbar-text me-2\">{{ name }}, {{ email }}</span>\n            <button v-on:click=\"logout\" class=\"btn btn-outline-secondary\">Logout</button>\n          </div>\n        </div>\n      </nav>\n      <main>\n        <div class=\"container py-3\">\n          <article v-for=\"post in posts\" v-bind:key=\"post.id\">\n            <h3>{{ post.title }}</h3>\n            <p>{{ post.body }}</p>\n          </article>\n        </div>\n      </main>\n    </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: localStorage.getItem('email'),\n      name: localStorage.getItem('name'),\n      posts: [],\n    };\n  },\n  mounted() {\n    this.getPosts();\n  },\n  methods: {\n    async getPosts() {\n      try {\n        const token = localStorage.getItem('auth-token');\n        const response = await fetch('/posts', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (!response.ok) { throw Error(response.statusText); }\n        const data = await response.json();\n        this.posts = data.posts;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    logout() {\n      localStorage.removeItem('email');\n      localStorage.removeItem('name');\n      localStorage.removeItem('auth-token');\n      this.isLogedIn = false;\n      this.$router.push('/login');\n    },\n  },\n};\n</script>\n","<template>\n  <div class=\"py-4\">\n    <form v-on:submit=\"handleSubmit\" class=\"mx-auto border rounded p-4\" method=\"POST\" action=\"/users/login\" autocomplete=\"off\" novalidate>\n      <div class=\"mb-3\">\n        <label for=\"login\" class=\"form-label h5\">Login or Email</label>\n        <input type=\"text\" class=\"form-control\" name=\"login\" id=\"login\" />\n      </div>\n      <div class=\"mb-4\">\n        <label for=\"password\" class=\"form-label h5\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary w-100 mb-3\">Log in</button>\n      <div class=\"text-end\">\n        <router-link to=\"/register\">Sign up →</router-link>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    async handleSubmit(e) {\n      e.preventDefault();\n\n      const params = {\n        login: e.target.elements.login.value,\n        password: e.target.elements.password.value,\n      };\n\n      try {\n        const response = await fetch('/users/login', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(params),\n        });\n        const data = await response.json();\n\n        if (!response.ok) {\n          if (data.message) return alert(data.message);\n          throw Error(response.statusText);\n        }\n\n        localStorage.setItem('email', data.email);\n        localStorage.setItem('name', data.name);\n        localStorage.setItem('auth-token', data.token);\n        this.$router.push('/');\n      } catch (error) {\n        alert('Something went wrong :-(');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n  form {\n    width: 320px;\n  }\n  a {\n    text-underline-offset: 3px;\n  }\n</style>\n","<template>\n  <div class=\"py-4\">\n    <form v-on:submit=\"handleSubmit\" class=\"mx-auto border rounded p-4\" method=\"POST\" action=\"/users/register\" autocomplete=\"off\" novalidate>\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label h5\">Email</label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"login\" class=\"form-label h5\">Login</label>\n        <input type=\"text\" class=\"form-control\" name=\"login\" id=\"login\" />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"real_name\" class=\"form-label h5\">Name</label>\n        <input type=\"text\" class=\"form-control\" name=\"real_name\" id=\"real_name\" />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label h5\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"birth_date\" class=\"form-label h5\">Birth date</label>\n        <input type=\"date\" class=\"form-control\" name=\"birth_date\" id=\"birth_date\" />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"country\" class=\"form-label h5\">Country</label>\n        <select class=\"form-select\" id=\"country\">\n          <option value=\"\">-- Please choose an country --</option>\n          <option v-for=\"country in countries\" v-bind:value=\"country.name\" v-bind:key=\"country.id\">{{ country.name }}</option>\n        </select>\n      </div>\n      <div class=\"mb-4 form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" name=\"is_agree\" id=\"is_agree\" />\n        <label for=\"is_agree\" class=\"form-check-label\">Agree with terms and conditions</label>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary w-100 mb-3\">Sign up</button>\n      <div class=\"text-end\">\n        <router-link to=\"/login\">Log in →</router-link>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      countries: [],\n    }\n  },\n  mounted() {\n    this.getCountries();\n  },\n  methods: {\n    async getCountries() {\n      try {\n        const response = await fetch('/users/register');\n        const data = await response.json();\n        if (!response.ok) { throw Error(response.statusText); }\n        this.countries = data.countries;\n      } catch (error) {\n        alert('Something went wrong :-(');\n      }\n    },\n    async handleSubmit(e) {\n      e.preventDefault();\n\n      const params = {\n        email: e.target.elements.email.value,\n        login: e.target.elements.login.value,\n        real_name: e.target.elements.real_name.value,\n        password: e.target.elements.password.value,\n        birth_date: e.target.elements.birth_date.value,\n        is_agree: e.target.elements.is_agree.checked,\n        country: e.target.elements.country.value,\n      };\n\n      try {\n        const response = await fetch('/users/register', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(params),\n        });\n        const data = await response.json();\n\n        if (!response.ok) {\n          if (data.message) return alert(data.message);\n          throw Error(response.statusText);\n        }\n\n        localStorage.setItem('email', data.email);\n        localStorage.setItem('name', data.name);\n        localStorage.setItem('auth-token', data.token);\n        this.$router.push('/');\n      } catch (error) {\n        alert('Something went wrong :-(');\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n  form {\n    width: 480px;\n  }\n  a {\n    text-underline-offset: 3px;\n  }\n</style>\n"],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","use","mount","exports","require","Object","defineProperty","value","str","expectsLowerCase","create","list","val","toLowerCase","PatchFlagNames","slotFlagsText","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","makeMap","range","source","start","end","lines","newlineSequences","_","idx","count","res","j","line","repeat","Math","max","String","lineLength","newLineSeqLength","pad","min","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","unsafeAttrCharRE","attrValidationCache","name","hasOwnProperty","isUnsafe","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","isKnownAttr","item","normalized","normalizeStyle","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","tmp","trim","styles","normalizedKey","startsWith","hyphenate","normalizeClass","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","escapeRE","string","match","exec","escaped","index","lastIndex","charCodeAt","substring","commentStripRE","src","replace","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","looseCompareArrays","aKeysCount","keys","bKeysCount","aHasKey","bHasKey","arr","findIndex","toDisplayString","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","freeze","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","extend","assign","el","splice","prototype","hasOwn","toTypeString","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","hit","camelizeRE","camelize","c","toUpperCase","hyphenateRE","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","global","escapeHtml","escapeHtmlComment","generateCodeFrame","isSSRSafeAttrName","looseIndexOf","stringifyStyle","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","options","token","set","createBinop","types","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","code","skipWhiteSpace","isWhitespace","Position","col","column","SourceLocation","filename","identifierName","getLineInfo","input","offset","lineStart","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","setTrailingComments","node","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","loc","state","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","containingNode","finalizeComment","trailingNode","leadingComments","commentStart","properties","arguments","params","specifiers","finalizeRemainingComments","resetPreviousNodeTrailingComments","ErrorCodes","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","raiseWithData","raiseOverwrite","errorRecovery","errors","_raise","errorTemplate","errorContext","err","isLookahead","superClass","parseRegExpLiteral","pattern","flags","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","stmtToDirective","addExtra","parseBlockBody","args","directiveStatements","directives","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseMaybePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","startPos","refExpressionErrors","toAssignable","isLHS","toAssignableObjectExpressionProp","Errors","finishCallExpression","optional","callee","attributes","toReferencedArguments","parseExport","exported","parseSubscript","base","noCalls","optionalChainMember","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","TokContext","preserveSpace","brace","tt","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next","reservedWordLikeSet","canBeReservedWord","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","finishToken","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloPos","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","this","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","out","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","maybeInArrowParameters","result","tryParse","setOptionalParametersError","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","readWord1","fullWord","getTokenFromCode","finishOp","isBinding","last","element","operator","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","checkLVal","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","jsx","curContext","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","curLine","potentialArrowAt","inPipeline","inPropertyName","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","ct","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","quote","entity","substr","fromCodePoint","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","createLookaheadState","lookaheadState","prevType","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","tsIsIdentifier","tsTokenCanFollowModifier","isLiteralPropertyName","hasPrecedingLineBreak","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","tsTryParse","bind","tsParseModifiers","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","isLineTerminator","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","lookaheadCharCode","parseMaybeUnary","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","hasFollowingLineBreak","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","override","elt","pp","parameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","typeCast","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","checkCommaAfterRest","readToken_lt_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","getExpression","placeholder","PlaceHolderErrors","ClassNameIsRequired","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","p","moduleAttributesVerionPluginOption","missingPlugins","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","getOptions","opts","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","skip","codePointAtPos","cp","trail","setStrict","skipSpace","readTmplToken","skipLineComment","startSkip","spaceStart","loop","CommentWhitespace","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","width","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","readWord","readRegexp","content","mods","char","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","octal","firstCode","escStart","identifierCheck","esc","keywordTypes","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","declarePrivateName","classScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","usePrivateName","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","expectOnePlugin","names","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","Node","parser","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","isLast","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","refNeedsArrowPos","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","parseDecorator","checkClashes","disallowLetBinding","strictModeChanged","elem","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","resultError","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","isPrivate","meta","parseMetaProperty","propertyName","SourceTypeModuleErrors","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","oldInPropertyName","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","reservedTest","delegating","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","StatementParser","interpreter","parseInterpreterDirective","isLetKeyword","matched","endCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","block","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importedIsString","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList","factory","define","amd","estreeWalker","should_skip","should_remove","replacement","WalkerBase","leave","visit","_should_skip","_should_remove","_replacement","skipped","removed","instance","SyncWalker","AsyncWalker","asyncWalk","walk","reactivity","shared","vnode","msg","pauseTracking","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","proxy","formatComponentName","warnArgs","formatTrace","resetTracking","currentVNode","normalizedStack","recurseCount","parentInstance","logs","entry","formatTraceEntry","isRoot","open","props","formatProps","formatProp","isRef","toRaw","ErrorTypeStrings","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","info","pushWarningContext","popWarningContext","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","RECURSION_LIMIT","job","jobId","getId","middle","middleJobId","allowRecurse","findInsertionIndex","queueFlush","flushJobs","activeQueue","pendingQueue","queueCb","seen","parentJob","checkRecursiveUpdates","flushPreFlushCbs","deduped","sort","active","flushPostFlushCbs","ownerInstance","componentName","getComponentName","isHmrUpdating","hmrDirtyComponents","globalObject","__VUE_HMR_RUNTIME__","createRecord","tryWrap","rerender","__hmrId","record","instances","isClassComponent","__vccOpts","newRender","render","renderCache","newComp","queuePostFlushCb","queueJob","hook","devtools","app","version","emit","Fragment","Text","Comment","Comment$1","Static","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","uid","devtoolsPerfStart","createDevtoolsPerformanceHook","devtoolsPerfEnd","time","deprecationData","isRuntimeOnly","legacyHook","newHook","coerced","comp","configMsg","instanceWarned","warnCount","getCurrentInstance","getCompatConfigForKey","dupKey","compId","componentDupKey","isCompatEnabled","globalCompatConfig","MODE","instanceConfig","compatConfig","enableForBuiltIn","__isBuiltIn","rawMode","mode","rawArgs","emitsOptions","propsOptions","validator","isValid","modelArg","modifiersKey","number","devtoolsComponentEmit","lowerCaseEvent","handlerName","onceHandler","emitted","asMixin","emitsCache","emits","hasExtends","extendEmits","normalizedFromExtend","normalizeEmitsOptions","currentRenderingInstance","currentScopeId","__scopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","setCurrentRenderingInstance","_c","accessedAttrs","Component","withProxy","slots","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","markAttrsAccessed","getFunctionalFallthrough","setRoot","patchFlag","getChildRoot","filterModelListeners","cloneVNode","allAttrs","eventAttrs","extraAttrs","dirs","isElementRoot","transition","blockStack","createVNode","rawChildren","dynamicChildren","childRoot","filterSingleRoot","dynamicIndex","updatedRoot","singleRoot","child","isVNode","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","hasPropsChanged","dynamicProps","isEmitListener","$stable","nextKeys","subTree","isSuspense","__isSuspense","SuspenseImpl","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","rendererInternals","mountSuspense","patchSuspense","hydrate","hydrateSuspense","createSuspenseBoundary","normalize","normalizeSuspenseChildren","Suspense","eventListener","patch","o","hiddenContainer","suspense","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","effects","timeout","fallback","hasWarned","m","move","isUnmounted","resume","delayEnter","afterLeave","hasUnresolvedAncestor","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","updateHOCHostEl","doRemove","hydrateNode","isSlotChildren","normalizeSuspenseSlot","s","isCompiledSlot","openBlock","currentBlock","closeBlock","singleChild","branch","currentInstance","provides","parentProvides","defaultValue","treatDefaultAsFactory","effect","doWatch","INITIAL_WATCHER_VALUE","immediate","deep","flush","onTrack","onTrigger","warnInvalidSource","getter","forceTrigger","isMultiSource","_shallow","isReactive","traverse","cleanup","onInvalidate","baseGetter","runner","onStop","isInSSRComponentSetup","newValue","scheduler","queuePostRenderEffect","isMounted","queuePreFlushCb","lazy","recordInstanceBoundEffect","publicThis","createPathGetter","path","segments","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","BaseTransitionImpl","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","useTransitionState","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","hooks","beforeEnter","leavingVNode","afterHook","cancelHook","called","done","_enterCb","cancelled","isKeepAlive","keepComment","keyedFragmentCount","isAsyncWrapper","__asyncLoader","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","pendingRequest","resolvedComp","retries","retry","load","thisRequest","reject","userRetry","userFail","__esModule","Symbol","toStringTag","defineComponent","__asyncResolved","createInnerComp","loaded","ref","delayed","__isKeepAlive","KeepAliveImpl","include","exclude","sharedContext","renderer","__v_cache","_unmount","storageContainer","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","resetShapeFlag","pruneCacheEntry","watch","pruneCache","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","cachedVNode","KeepAlive","target","registerKeepAliveHook","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","setCurrentInstance","apiName","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","shouldCacheAccess","resolveMergedOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provide","provideOptions","inject","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","filters","checkDuplicateProperties","createDuplicateChecker","resolveInjections","methodHandler","writable","reactive","opt","createWatcher","Reflect","ownKeys","register","_hook","registerLifecycleHook","onActivated","onDeactivated","onErrorCaptured","exposed","normalizeInject","h","r","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","validateProps","shallowReactive","rawPrevProps","rawCurrentProps","hasAttrsChanged","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","trigger","needCastKeys","rawCastValues","camelKey","castValues","isAbsent","propsCache","extendProps","normalizePropsOptions","validatePropName","booleanIndex","getTypeIndex","stringIndex","ctor","getType","expectedTypes","isSameType","resolvedValues","validateProp","required","assertType","getInvalidTypeMessage","isSimpleType","receivedType","expectedValue","styleValue","receivedValue","isExplicable","isBoolean","explicitTypes","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","isBuiltInDirective","internalInstance","bindings","dir","oldBindings","binding","isNativeTag","performance","globalProperties","compilerOptions","WeakMap","rootComponent","rootProps","createAppContext","installedPlugins","_uid","_component","_props","_container","_context","_instance","install","mixin","validateComponentName","validateDirectiveName","rootContainer","isHydrate","__vue_app__","devtoolsInitApp","devtoolsUnmountApp","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","mt","mountComponent","patchProp","insert","createComment","hasChildNodes","firstChild","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","setRef","forcePatchValue","invokeDirectiveHook","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","queueEffectWithSuspense","textContent","parentVNode","fragmentSlotScopeIds","supported","perf","isSupported","mark","startTag","endTag","measure","clearMarks","rtc","rtg","rawRef","oldRawRef","isUnmount","refValue","getExposeProxy","owner","oldRef","refs","doSet","baseCreateRenderer","createHydrationFunctions","createHydrationFns","__VUE__","setDevtoolsHook","__VUE_DEVTOOLS_GLOBAL_HOOK__","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","patchStaticNode","processFragment","processElement","processComponent","internals","removeStaticNode","moveStaticNode","mountElement","patchElement","is","mountChildren","unmountChildren","scopeId","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","areChildrenSVG","patchBlockChildren","traverseStaticChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","updateComponent","initialVNode","createComponentInstance","registerHMR","startMeasure","setupComponent","endMeasure","shouldUpdateComponent","updateComponentPreRender","invalidateJob","bm","hydrateSubTree","renderComponentRoot","scopedInitialVNode","bu","u","originNext","nextTree","prevTree","createDevEffectOptions","updateProps","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","needTransition","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","unregisterHMR","bum","_vnode","mc","pc","pbc","createApp","createAppAPI","shallow","ch1","arrI","isTeleport","__isTeleport","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","TeleportImpl","querySelector","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","targetNode","_lpa","Teleport","COMPONENTS","DIRECTIVES","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","registry","disableTracking","isBlockTreeEnabled","__v_isVNode","vnodeArgsTransformer","transformer","createVNodeWithArgsTransform","_createVNode","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","isProxy","klass","__v_skip","extraProps","mergeRef","mergedProps","mergeProps","deepCloneVNode","text","flag","numberOfNodes","asBlock","createBlock","slot","slotFlag","toMerge","existing","incoming","renderItem","isInteger","dynamicSlots","noSlotted","validSlotContent","ensureValidVNode","rendered","vnodes","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","shallowReadonly","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","PublicInstanceProxyHandlers","accessCache","__isScriptSetup","normalizedProps","publicGetter","cssModule","track","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","exposeProxy","setupContext","bc","sp","createRenderContext","isBuiltInTag","appIsNativeTag","initProps","setupResult","setupStatefulComponent","markRaw","Proxy","exposePropsOnRenderContext","createSetupContext","unsetInstance","resolvedResult","finishComponentSetup","__ssrInlineRender","ssrRender","devtoolsRawSetupState","proxyRefs","exposeSetupStateOnRenderContext","compile","_compile","skipOptions","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","_rc","applyOptions","attrDevProxyHandlers","deleteProperty","classifyRE","classify","displayName","__file","inferFromRegistry","getterOrOptions","warnRuntimeUsage","defineEmit","defineEmits","defaults","getContext","getAwaitable","awaitable","propsOrChildren","ssrContextKey","useSSRContext","vueStyle","numberStyle","stringStyle","keywordStyle","formatter","header","__isVue","genRefFlag","formatValue","isReadonly","formatInstance","blocks","createInstanceBlock","extractKeys","asRaw","Comp","extracted","isKeyOfType","devtoolsFormatters","_ssrUtils","ssrUtils","resolveFilter","compatUtils","customRef","shallowRef","toRef","toRefs","triggerRef","unref","createCommentVNode","createHydrationRenderer","createRenderer","createSlots","createStaticVNode","defineAsyncComponent","defineExpose","defineProps","initCustomFormatter","mergeDefaults","popScopeId","pushScopeId","registerRuntimeCompiler","renderList","renderSlot","resolveComponent","resolveDirective","resolveDynamicComponent","toHandlers","transformVNodeArgs","useAttrs","useContext","useSlots","watchEffect","withAsyncContext","withDefaults","withDirectives","script","initialize","pluginDescriptor","setupFn","__VUE_DEVTOOLS_PLUGINS__","getTarget","navigator","HOOK_SETUP","_withId","_cache","_component_router_view","routes","requiresAuth","redirect","router","history","beforeEach","localStorage","getItem","email","posts","getPosts","response","fetch","headers","Authorization","ok","statusText","json","logout","removeItem","isLogedIn","$router","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_component_router_link","post","title","handleSubmit","preventDefault","login","password","alert","setItem","onSubmit","action","autocomplete","novalidate","countries","getCountries","real_name","birth_date","is_agree","checked","country","_hoisted_7","_hoisted_8","for","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14"],"version":3,"file":"index.bd78eeec.js.map","sourceRoot":"../"}